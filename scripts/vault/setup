#!/bin/sh
create_vault_service() {
  echo "Creating $network Vault"
  [ -d /opt/$network ] || mkdir /opt/$network
  [ -d /opt/$network/vault ] || mkdir /opt/$network/vault
  cp ./vault /opt/$network/vault/
  cp ./keyfile.json /opt/$network/vault/
  [ -d /usr/lib/systemd/system/ ] || mkdir /usr/lib/systemd/system/
  cp $network-vault.service /usr/lib/systemd/system/
}

create_runner_service() {
  echo "Creating $network Runner"
  [ -d /opt/$network ] || mkdir /opt/$network
  [ -d /opt/$network/runner ] || mkdir /opt/$network/runner
  cp ./runner /opt/$network/runner/
  cp ./keyfile.json /opt/$network/runner/
  [ -d /usr/lib/systemd/system/ ] || mkdir /usr/lib/systemd/system/
  cp $network-runner.service /usr/lib/systemd/system/
}

case $2 in

  vault)
    service_generator="create_vault_service"
    ;;

  runner)
    service_generator="create_runner_service"
    ;;

  *)
    echo "Please specify a client as the second argument. Valid options are: vault, runner"
    ;;

esac

case $1 in

  testnet-kintsugi)
    network="testnet-kintsugi"
    $service_generator
    ;;

  testnet-interlay)
    network="testnet-interlay"
    $service_generator
    ;;

  kintsugi)
    network="kintsugi"
    $service_generator
    ;;

  interlay)
    network="interlay"
    $service_generator
    ;;

  *)
    echo "Please specify a network as the first argument. Valid options are: testnet-kintsugi, testnet-interlay, kintsugi, and interlay."
    ;;

esac
